{"version":3,"sources":["components/Header.js","context.js","components/Filter.js","components/Grid.js","components/Info.js","components/Listing.js","App.js","index.js"],"names":["Header","Navbar","bg","variant","Container","Brand","Context","React","createContext","Filter","allPositions","setFilteredEmployees","allEmployees","URL","setFilter","filter","useState","value","setValue","useContext","contractTypes","setContractTypes","currentDate","Date","useEffect","getContractTypes","getEmployeesPosition","position","handleInputChange","e","target","name","a","axios","get","response","data","className","Row","Col","lg","Form","Label","Select","onChange","sort","b","orderIdx","map","pos","id","contractType","filtered","forEach","contracts","find","c","typeId","Number","from","to","push","filterByContract","status","filterByActiveContract","Group","Control","type","nameFilter","result","emp","surname","toLowerCase","includes","filterByName","Button","onClick","disabled","converteFormat","date","split","reverse","join","Grid","setAllEmployyes","filteredEmployees","loader","setLoader","setCurrentEmployeeId","setAllPositions","history","useHistory","getAllEmployees","getAllPositions","activeContract","limitInterval","openInterval","Table","striped","bordered","hover","colSpan","color","localeCompare","handleClick","positionId","Info","currentEmployeeId","currentEmployee","setCurrentEmployee","error","setError","getEmployye","employee","console","log","Alert","Heading","Card","Body","Title","Subtitle","p","getPosition","goBack","Listing","App","Provider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1671f7c1.chunk.js","sourcesContent":["import { Container, Navbar } from \"react-bootstrap\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Navbar bg=\"dark\" variant='dark'>\r\n            <Container>\r\n                <Navbar.Brand>\r\n                    Webnotion test task with react-bootstrap\r\n                </Navbar.Brand>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nexport const Context = React.createContext()","import { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport { Context } from '../context'\r\n\r\nconst Filter = ({ allPositions, setFilteredEmployees, allEmployees, URL, setFilter, filter }) => {\r\n    const [value, setValue] = useState({})\r\n    const { contractTypes, setContractTypes } = useContext(Context)\r\n    const currentDate = new Date()\r\n\r\n    useEffect(() => {\r\n        getContractTypes()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getEmployeesPosition(value.position)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value.position])\r\n\r\n    const handleInputChange = (e) => {\r\n        const { value, name } = e.target\r\n        setValue({ [name]: value })\r\n    }\r\n\r\n    const getEmployeesPosition = async () => {\r\n        if (!value.position) {\r\n            setFilter(false)\r\n            return\r\n        } else {\r\n            const response = await axios.get(URL + `/employees?positionId=${value.position}`)\r\n            setFilter(true)\r\n            setFilteredEmployees(response.data)\r\n        }\r\n    }\r\n\r\n    const getContractTypes = async () => {\r\n        const response = await axios.get(URL + '/contractTypes ')\r\n        setContractTypes(response.data)\r\n    }\r\n\r\n    const filterByContract = (e) => {\r\n        handleInputChange(e)\r\n        const { value } = e.target\r\n        const filtered = []\r\n        if (!value) {\r\n            setFilter(false)\r\n            return\r\n        } else {\r\n            setFilter(true)\r\n            allEmployees.forEach(e => {\r\n                const contr = e.contracts.find(c => c.typeId === Number(value) && currentDate > new Date(c.from) && (currentDate < new Date(c.to) || c.to === null))\r\n                if (contr) {\r\n                    filtered.push(e)\r\n                }\r\n                setFilteredEmployees(filtered)\r\n            })\r\n        }\r\n    }\r\n\r\n    const filterByActiveContract = (e) => {\r\n        handleInputChange(e)\r\n        const { value } = e.target\r\n        const filtered = []\r\n        if (value === 'all') {\r\n            setFilter(false)\r\n            return\r\n        } else if (value === 'active') {\r\n            allEmployees.forEach(e => {\r\n                const activeEmployee = e.contracts.find(c => (currentDate < new Date(c.to) || c.to === null) && currentDate > new Date(c.from))\r\n                if (activeEmployee) {\r\n                    filtered.push(e)\r\n                }\r\n                setFilter(true)\r\n                setFilteredEmployees(filtered)\r\n            })\r\n        } else if (value === 'unactive') {\r\n            allEmployees.forEach(e => {\r\n                const unactiveEmp = e.contracts.find(c => (currentDate < new Date(c.to) || c.to === null) && currentDate > new Date(c.from))\r\n                if (!unactiveEmp) {\r\n                    filtered.push(e)\r\n                    setFilteredEmployees(filtered)\r\n                    setFilter(true)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const filterByName = (e) => {\r\n        handleInputChange(e)\r\n        setFilter(true)\r\n        const { value } = e.target\r\n        const result = allEmployees.filter(emp => emp.surname.toLowerCase().includes(value.toLowerCase()))\r\n        setFilteredEmployees(result)\r\n        setFilter(true)\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-5\">\r\n            <Row className='mt-2'>\r\n                <Col lg=\"2\">\r\n                    <Form.Label>Position</Form.Label>\r\n                </Col>\r\n                <Col lg=\"4\" >\r\n                    <Form.Select name='position' value={value.position ?? ''} onChange={e => handleInputChange(e)}>\r\n                        <option value={''}>Choose position</option>\r\n                        {allPositions\r\n                            .sort((a, b) => a.orderIdx - b.orderIdx)\r\n                            .map(pos => (\r\n                                <option key={pos.id} value={pos.id}>\r\n                                    {pos.name}\r\n                                </option>\r\n                            ))}\r\n                    </Form.Select>\r\n                </Col>\r\n            </Row>\r\n            <Row className='mt-2'>\r\n                <Col lg=\"2\">\r\n                    <Form.Label>Contract Type</Form.Label>\r\n                </Col>\r\n                <Col lg=\"4\">\r\n                    <Form.Select name='contractType' value={value.contractType ?? ''} onChange={e => filterByContract(e)}>\r\n                        <option value={''}>Choose contract type</option>\r\n                        {contractTypes &&\r\n                            contractTypes.map(c => (\r\n                                <option key={c.id} value={c.id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                    </Form.Select>\r\n                </Col>\r\n            </Row >\r\n            <Row className='mt-2'>\r\n                <Col lg=\"2\">\r\n                    <Form.Label>Active/Unactive</Form.Label>\r\n                </Col>\r\n                <Col lg=\"4\">\r\n                    <Form.Select name='status' value={value.status ?? ''} onChange={e => filterByActiveContract(e)}>\r\n                        <option value={''}>Choose contract status</option>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"active\">Active</option>\r\n                        <option value=\"unactive\">Unactive</option>\r\n                    </Form.Select>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Form.Group>\r\n                    <Form.Label>Filter by Name</Form.Label>\r\n                    <Form.Control name='nameFilter' type='text' value={value.nameFilter ?? ''} onChange={(e) => filterByName(e)}></Form.Control>\r\n                </Form.Group>\r\n            </Row>\r\n            <Row className='' >\r\n                <Col lg='2'>\r\n                    <Button className='mt-2' onClick={() => { setFilter(false); setValue({}) }} disabled={!filter}>Cancel filter</Button>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\nexport default Filter\r\n","import axios from 'axios'\r\nimport React, { useContext } from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { Container, Table } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router'\r\nimport { Context } from '../context'\r\nimport Filter from './Filter'\r\nimport Loader from \"react-loader-spinner\";\r\nimport { URL } from '../App'\r\n\r\nexport const converteFormat = (date) => {\r\n    return date.split('-').reverse().join('.')\r\n}\r\n\r\nconst Grid = () => {\r\n    const [allEmployees, setAllEmployyes] = useState([])\r\n    const [filteredEmployees, setFilteredEmployees] = useState([])\r\n    const [filter, setFilter] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const { setCurrentEmployeeId, setAllPositions, allPositions } = useContext(Context)\r\n    const data = filter ? filteredEmployees : allEmployees\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getAllEmployees();\r\n        getAllPositions();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const getAllEmployees = async () => {\r\n        setLoader(true)\r\n        const response = await axios.get(URL + '/employees')\r\n        setAllEmployyes(response.data)\r\n        setLoader(false)\r\n    }\r\n\r\n    const getAllPositions = async () => {\r\n        const response = await axios.get(URL + '/positions')\r\n        setAllPositions(response.data)\r\n    }\r\n\r\n\r\n\r\n    const activeContract = (contracts) => {\r\n        const currentDate = new Date()\r\n        const limitInterval = contracts.find(c => new Date(c.from) < currentDate && c.to === null)\r\n        const openInterval = contracts.find(c => new Date(c.from) < currentDate && currentDate < new Date(c.to))\r\n        if (limitInterval) {\r\n            return <p key={limitInterval.id}>{converteFormat(limitInterval.from)} - ...</p>\r\n        } else if (openInterval) {\r\n            return <p key={openInterval.id}>{converteFormat(openInterval.from)} - {converteFormat(openInterval.to)}</p>\r\n        } else {\r\n            return <p>-</p>\r\n        }\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        const { id } = e.target\r\n        setCurrentEmployeeId(id)\r\n        history.push('/info')\r\n    }\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Filter\r\n                allPositions={allPositions}\r\n                allEmployees={allEmployees}\r\n                URL={URL}\r\n                setFilter={setFilter}\r\n                filter={filter}\r\n                setFilteredEmployees={setFilteredEmployees}\r\n            />\r\n            <Table striped bordered hover >\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Position</th>\r\n                        <th>Active contract</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {!loader ? data?.sort((a, b) => a.surname.localeCompare(b.surname) || a.name.localeCompare(b.name)).map(emp =>\r\n                        <tr key={emp.id} onClick={e => handleClick(e)}>\r\n                            <td id={emp.id}>{emp.id}</td>\r\n                            <td id={emp.id}>{`${emp.surname} ${emp.name}`}</td>\r\n                            <td id={emp.id}>{allPositions.find(pos => pos.id === emp.positionId)?.name}</td>\r\n                            <td id={emp.id}>{activeContract(emp.contracts)}</td>\r\n                        </tr>\r\n                    ) : <tr><td colSpan={4} className='text-center'><Loader type=\"BallTriangle\" color=\"#0d6efd\" /></td></tr>}\r\n                </tbody >\r\n            </Table >\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Grid","import axios from \"axios\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { Alert, Button, Card, Container, Table } from \"react-bootstrap\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { useHistory } from \"react-router\"\r\nimport { URL } from \"../App\"\r\nimport { Context } from \"../context\"\r\nimport { converteFormat } from \"./Grid\"\r\n\r\n\r\nconst Info = () => {\r\n    const { currentEmployeeId, allPositions, contractTypes } = useContext(Context)\r\n    const [currentEmployee, setCurrentEmployee] = useState({})\r\n    const [loader, setLoader] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const history = useHistory()\r\n    const getEmployye = async () => {\r\n        setLoader(true)\r\n        try {\r\n            const employee = await axios.get(URL + `/employees/${currentEmployeeId}`)\r\n            setCurrentEmployee(employee.data)\r\n\r\n        } catch (error) {\r\n            setError(true)\r\n        }\r\n        setLoader(false)\r\n    }\r\n\r\n    const getPosition = () => {\r\n        return allPositions.find(p => p.id === (currentEmployee.positionId))?.name\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEmployye()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    console.log(error)\r\n\r\n    return (<>\r\n        <Container className='p-4'>\r\n            {!error ?\r\n                <Card >\r\n                    <Card.Body>\r\n                        <Card.Title>{currentEmployee.surname} {currentEmployee.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">{getPosition()}</Card.Subtitle>\r\n                        <Card.Title>All Contracts </Card.Title>\r\n                        <Table striped bordered hover>\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Contract Type</th>\r\n                                    <th>Start date</th>\r\n                                    <th>End date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"\">\r\n                                {!loader ? currentEmployee?.contracts?.sort((a, b) => new Date(a.from) < new Date(b.from) ? 1 : -1).map(e =>\r\n                                    <tr key={e.id}>\r\n                                        <td>{contractTypes.find(c => c.id === e.typeId).name}</td>\r\n                                        <td>{e.from ? converteFormat(e.from) : '...'}</td>\r\n                                        <td>{e.to ? converteFormat(e.to) : '...'}</td>\r\n                                    </tr>\r\n                                ) :\r\n                                    <tr><td colSpan={4} className='text-center'><Loader type=\"BallTriangle\" color=\"#0d6efd\" /></td></tr>\r\n                                }\r\n                            </tbody >\r\n\r\n                        </Table>\r\n                    </Card.Body>\r\n                </Card>\r\n                :\r\n                <Alert variant=\"danger\" >\r\n                    <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n                    <p>It looks like you entered the address manually and the system did not receive an employee ID for more detailed information</p>\r\n                </Alert>\r\n            }\r\n            <Button className='mt-3' onClick={() => history.goBack()}>Back</Button>\r\n        </Container>\r\n    </>)\r\n}\r\n\r\nexport default Info","import { Container } from \"react-bootstrap\"\r\nimport Grid from \"./Grid\"\r\n\r\nconst Listing = () => {\r\n    return (\r\n        <Container>\r\n            <Grid />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Listing","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Header from \"./components/Header\";\nimport Info from './components/Info';\nimport Listing from \"./components/Listing\";\nimport { Context } from './context'\n\nexport const URL = 'https://my-json-server.typicode.com/1ohnny/test-api'\n\nfunction App() {\n  const [currentEmployeeId, setCurrentEmployeeId] = useState({})\n  const [allPositions, setAllPositions] = useState([])\n  const [contractTypes, setContractTypes] = useState([])\n\n  return (\n    <>\n      <Context.Provider value={{ currentEmployeeId, setCurrentEmployeeId, allPositions, setAllPositions, contractTypes, setContractTypes }}>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path='/' component={Listing} />\n            <Route path='/info' component={Info} />\n          </Switch>\n        </Router>\n      </Context.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}